/*!
 * Django Autocomplete Light
 */
var yl=yl||{};yl.functions=yl.functions||{},yl.registerFunction=function(e,t){if(!this.functions.hasOwnProperty(e)){if("function"!=typeof t)throw new Error("The custom DAL function must be a function.");this.functions[e]=t;var n=new CustomEvent("dal-function-registered."+e,{detail:{name:e,func:t}});window.dispatchEvent(n)}},window.addEventListener("load",(function(){window.django=window.django||{},django.hasOwnProperty("jQuery")||"undefined"===jQuery||(django.jQuery=jQuery),function(e){e.fn.getFormPrefix=function(){var t=e(this).attr("name").split("-");for(var n in t){var i=t.slice(0,-n).join("-");if(i.length)if(e(":input[name^="+(i+="-")+"]").length)return i}return""},e.fn.getFormPrefixes=function(){var t=e(this).attr("name").split("-").slice(0,-1),n=[];for(i=0;i<t.length;i+=2){var r=t.slice(0,-i||t.length).join("-");if(r.length)e(":input[name^="+(r+="-")+"]").length&&n.push(r)}return n.push(""),n},"undefined"!=typeof dalLoadLanguage?dalLoadLanguage(e):document.addEventListener("dal-language-loaded",(function(t){dalLoadLanguage(e)}));var t=new CustomEvent("dal-init-function");document.dispatchEvent(t);var n=[];function r(t){if(void 0!==t&&"number"!=typeof t||(t=this),!(n.indexOf(t.id)>=0)){var i=e(t).attr("data-autocomplete-light-function");yl.functions.hasOwnProperty(i)&&"function"==typeof yl.functions[i]?yl.functions[i](e,t):yl.functions.hasOwnProperty(i)&&window.addEventListener("dal-function-registered."+i,(function(n){yl.functions[i](e,t)})),e(t).trigger("autocompleteLightInitialize"),n.push(t.id);var r=new CustomEvent("dal-element-initialized",{detail:{element:t}});document.dispatchEvent(r)}}if(e.fn.excludeTemplateForms=function(){return this.not("[id*=__prefix__]").filter((function(){return!this.id.match(/-empty-/)||this.id.match(/-\d+-empty-\d+-/)}))},!window.__dal__initialize){function a(e){return"classList"in e&&e.classList.contains("ui-sortable-helper")}window.__dal__initialize=r,e(document).ready((function(){e("[data-autocomplete-light-function]").excludeTemplateForms().each(r)})),"MutationObserver"in window?new MutationObserver((function(t){for(var n,i,o=0;o<t.length;o++)if((n=t[o]).addedNodes.length>0)for(var d=0;d<n.addedNodes.length;d++){if(a(i=n.addedNodes[d]))return;e(i).find("[data-autocomplete-light-function]").excludeTemplateForms().each(r)}})).observe(document.documentElement,{childList:!0,subtree:!0}):e(document).on("DOMNodeInserted",(function(t){a(t.target)||e(t.target).find("[data-autocomplete-light-function]").excludeTemplateForms().each(r)}))}if(document.csrftoken=function(t){var n=null;if(document.cookie&&""!=document.cookie)for(var i=document.cookie.split(";"),r=0;r<i.length;r++){var a=e.trim(i[r]);if(a.substring(0,t.length+1)==t+"="){n=decodeURIComponent(a.substring(t.length+1));break}}return n}("csrftoken"),null===document.csrftoken){var o=e('form :input[name="csrfmiddlewaretoken"]');o.length>0&&(document.csrftoken=o[0].value)}}(django.jQuery),function(e){"use strict";e.fn.djangoAdminSelect2=function(t){var n=e.extend({},t);return e.each(this,(function(t,i){!function(t,n){var i=e.extend({ajax:{data:function(e){return{term:e.term,page:e.page,app_label:t.data("app-label"),model_name:t.data("model-name"),field_name:t.data("field-name")}}}},n);t.select2(i)}(e(i),n)})),this},e((function(){e(".admin-autocomplete").not("[name*=__prefix__]").djangoAdminSelect2()})),document.addEventListener("formset:added",(t=>e(t.target).find(".admin-autocomplete").djangoAdminSelect2()))}(django.jQuery),function(e,t){t.forwardHandlerRegistry=t.forwardHandlerRegistry||{},t.registerForwardHandler=function(e,n){t.forwardHandlerRegistry[e]=n},t.getForwardHandler=function(e){return t.forwardHandlerRegistry[e]},t.getFieldRelativeTo=function(t,n){for(var i=e(t).getFormPrefixes(),r=0;r<i.length;r++){var a="[name="+i[r]+n+"]",o=e(a);if(o.length)return o}return e()},t.getValueFromField=function(t){var n,i,r=1===(n=t).length&&"checkbox"===n.attr("type")&&void 0===n.attr("value")?"exists":1===n.length&&void 0!==n.attr("multiple")?"multiple":(i=!0,e.each(n,(function(t,n){"checkbox"!==e(n).attr("type")&&(i=!1)})),i?"multiple":"single"),a=e(t).serializeArray();0==a&&e(t).prop("disabled")&&(e(t).prop("disabled",!1),a=e(t).serializeArray(),e(t).prop("disabled",!0));var o,d=function(e){return e.hasOwnProperty("value")&&void 0!==e.value?e.value:null};return"multiple"===r?a.map((function(e){return d(e)})):"exists"===r?a.length>0:null!==(o=function(e){return a.length>e?a[e]:null}(0))?d(o):null},t.getForwards=function(n){var i,r,a,o;if(o="div.dal-forward-conf#dal-forward-conf-for-"+n.attr("id")+", div.dal-forward-conf#dal-forward-conf-for_"+n.attr("id"),0!==(i=(n.length>0?e(n[0].form):e()).find(o).find("script")).length){try{r=JSON.parse(i.text())}catch(e){return}if(Array.isArray(r))return a={},e.each(r,(function(e,i){var r,o;if("const"===i.type)a[i.dst]=i.val;else if("self"===i.type)o=i.hasOwnProperty("dst")?i.dst:"self",a[o]=t.getValueFromField(n);else if("field"===i.type){r=i.src,o=i.hasOwnProperty("dst")?i.dst:r;var d=t.getFieldRelativeTo(n,r);if(!d.length)return;a[o]=t.getValueFromField(d)}else if("javascript"===i.type){var l=t.getForwardHandler(i.handler);a[i.dst||i.handler]=l(n)}})),JSON.stringify(a)}}}(django.jQuery,yl)}));